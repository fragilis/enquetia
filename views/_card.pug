mixin card(question)
  form.needs-validation.vote(method="POST", action="/" + question.id, novalidate)
    .card.enquete.m-0.m-sm-4(name=question.id)
      input.form-control(type="hidden", name="_csrf", value=csrfToken)
      .card-header.clearfix(style="background-color: ivory;")
        .row
          .col-8.col-sm-10.pr-0=question.title
          .col-4.col-sm-2.pl-0
            a.float-right(href=encodeURI("http://twitter.com/share?url=https://enquetia.net/" + question.id + "&text=気になるアンケートを見つけました！「" + question.title + "」&hashtags=Enquetia,アンケティア,アンケート"), target="_blank")
              img(src="/img/twitter_icon.png", width="25", height="25", alt="twitterに投稿", title="twitterに投稿")
            if profile
              if question.is_favorite
                a.float-right.mr-1.favoriteButton(onclick="removeFromFavorite(" + question.id + ")", style="cursor: pointer;")
                  img(src="/img/favorite.png", width="30", height="30", alt="お気に入りから削除", title="お気に入りから削除")
                a.float-right.mr-1.favoriteButton(onclick="addToFavorite(" + question.id + ")", style="cursor: pointer; display: none;")
                  img(src="/img/unfavorite.png", width="30", height="30", alt="お気に入りに追加", title="お気に入りに追加")
              else
                a.float-right.mr-1.favoriteButton(onclick="removeFromFavorite(" + question.id + ")", style="cursor: pointer; display: none;")
                  img(src="/img/favorite.png", width="30", height="30", alt="お気に入りから削除", title="お気に入りから削除")
                a.float-right.mr-1.favoriteButton(onclick="addToFavorite(" + question.id + ")", style="cursor: pointer;")
                  img(src="/img/unfavorite.png", width="30", height="30", alt="お気に入りに追加", title="お気に入りに追加")
      .card-body.p-4
        unless question.description === undefined || question.description === ''
          p.card-text #{question.description}
        unless question.hashtags === undefined || question.hashtags === ''
          - hashtags = question.hashtags.split(' ')
          p.card-text
            each hash, index in hashtags
              a(href="/", class="mr-1") ##{hash}
        input.form-control(type="hidden", name="question_id", id="question_id", value=question.id)
        input.form-control(type="hidden", name="expired_at", id="expired_at", value=question.expired_at)

        fieldset.form-group.pt-3
          .row
            unless question.answers === undefined
              each answer, index in question.answers
                .form-check.mb-3.pl-5.col-xs-12.col-sm-6
                  if question.answer_type === "radio" && index === 0
                    input.form-check-input(id="answer"+index, name="answer", type=question.answer_type, value=answer.id, required, disabled=question.is_expired || question.is_voted)
                  else
                    input.form-check-input(id="answer"+index, name="answer", type=question.answer_type, value=answer.id, disabled=question.is_expired || question.is_voted)
                  label.form-check-label(for="answer"+index) #{answer.content}
                  if question.answers.length === index+1
                    .invalid-feedback どれか1つを選択してください。

        - var time_left = ""
        if question.is_expired
          - time_left += "受付は終了しました"
        else if question.is_voted
          - time_left += "投票済み"
        else if question.period_hours === -1
          - time_left += "無期限"
        else
          - time_left += "残り"
          if question.left_hours > 0
            if parseInt(question.left_hours/24) > 0
              - time_left += String(parseInt(question.left_hours/24, 10)) + "日"
            - time_left += String(parseInt(question.left_hours, 10)%24) + "時間"

        - var publish_status = ""
        if !question.is_expired
          - publish_status += ""
          if question.publish_status === 1
            - publish_status += "トップページ公開"
          else if question.publish_status === 2
            - publish_status += "トップページ非公開"

        .row
          .clearfix.col-8.col-sm-12.p-0.pr-sm-3.pl-sm-3
            p.card-text.mb-0
              small.text-muted.mr-1 投票数：#{question.count}票
              small.text-muted.mr-1 #{publish_status} 
              if question.is_expired || question.is_voted
                small.mr-2(style="color:red;") #{time_left}
              else
                small.text-muted.mr-2 #{time_left}
              br
              a(href="javascript:void(0)", onclick="showResult(this)")
                small.mr-2 結果を見る
              a(href="/" + question.id)
                small アンケートのページに移動
              button.btn.btn-primary.btn-sm.float-right.d-none.d-sm-block(type="submit", disabled=question.is_expired || question.is_voted) 投票する
          .clearfix.col-4.col-sm-0.p-0.pr-sm-3.pl-sm-3
            button.btn.btn-primary.btn-sm.float-right.d-block.d-sm-none.mt-3(type="submit", disabled=question.is_expired || question.is_voted) 投票する




mixin editableCard(question)
  form.needs-validation(method="POST", action="/mypage/" + question.id, novalidate)
    .card.enquete.m-0.m-sm-4(name=question.id)
      .card-header.clearfix(style="background-color: ivory;")
        .row
          .col-8.col-sm-10.pr-0=question.title
          .col-4.col-sm-2.pl-0
            a.float-right(href=encodeURI("http://twitter.com/share?url=https://enquetia.net/" + question.id + "&text=気になるアンケートを見つけました！「" + question.title + "」&hashtags=Enquetia,アンケティア,アンケート"), target="_blank")
              img(src="/img/twitter_icon.png", width="25", height="25", alt="twitterに投稿", title="twitterに投稿")
            if profile
              if question.is_favorite
                a.float-right.mr-1.favoriteButton(onclick="removeFromFavorite(" + question.id + ")", style="cursor: pointer;")
                  img(src="/img/favorite.png", width="30", height="30", alt="お気に入りから削除", title="お気に入りから削除")
                a.float-right.mr-1.favoriteButton(onclick="addToFavorite(" + question.id + ")", style="cursor: pointer; display: none;")
                  img(src="/img/unfavorite.png", width="30", height="30", alt="お気に入りに追加", title="お気に入りに追加")
              else
                a.float-right.mr-1.favoriteButton(onclick="removeFromFavorite(" + question.id + ")", style="cursor: pointer; display: none;")
                  img(src="/img/favorite.png", width="30", height="30", alt="お気に入りから削除", title="お気に入りから削除")
                a.float-right.mr-1.favoriteButton(onclick="addToFavorite(" + question.id + ")", style="cursor: pointer;")
                  img(src="/img/unfavorite.png", width="30", height="30", alt="お気に入りに追加", title="お気に入りに追加")
      .card-body.p-4
        unless question.description === undefined || question.description === ''
          p.card-text #{question.description}
        unless question.hashtags === undefined || question.hashtags === ''
          - hashtags = question.hashtags.split(' ')
          p.card-text
            each hash, index in hashtags
              a(href="/", class="mr-1") ##{hash}
        input.form-control(type="hidden", name="question_id", id="question_id", value=question.id)
        input.form-control(type="hidden", name="expired_at", id="expired_at", value=question.expired_at)

        fieldset.form-group.pt-3
          .row
            unless question.answers === undefined
              each answer, index in question.answers
                .form-check.mb-3.pl-5.col-xs-12.col-sm-6
                  if question.answer_type === "radio" && index === 0
                    input.form-check-input(id="answer"+index, name="answer", type=question.answer_type, value=answer.id, required, disabled)
                  else
                    input.form-check-input(id="answer"+index, name="answer", type=question.answer_type, value=answer.id, disabled)
                  label.form-check-label(for="answer"+index) #{answer.content}
                  if question.answers.length === index+1
                    .invalid-feedback どれか1つを選択してください。

        - var time_left = ""
        if question.is_expired
          - time_left += "受付は終了しました"
        else if question.is_voted
          - time_left += "投票済み"
        else if question.period_hours === -1
          - time_left += "無期限"
        else
          - time_left += "残り"
          if question.left_hours > 0
            if parseInt(question.left_hours/24) > 0
              - time_left += String(parseInt(question.left_hours/24, 10)) + "日"
            - time_left += String(parseInt(question.left_hours, 10)%24) + "時間"

        - var publish_status = ""
        if !question.is_expired
          - publish_status += ""
          if question.publish_status === 1
            - publish_status += "トップページ公開"
          else if question.publish_status === 2
            - publish_status += "トップページ非公開"

        p.card-text.mb-0.clearfix
          small.text-muted.mr-1 投票数：#{question.count}票
          small.text-muted.mr-1 #{publish_status} 
          if question.is_expired || question.is_voted
            small.mr-2(style="color:red;") #{time_left}
          else
            small.text-muted.mr-2 #{time_left}
          br
          a(hrefd="javascript:void(0)", onclick="showResult(this)")
            small 結果を見る
          a(href="/" + question.id)
            small アンケートのページに移動
          button.btn.btn-danger.btn-sm.float-right.d-none.d-sm-block.ml-2(type="submit", name="delete") 削除する
          button.btn.btn-info.btn-sm.float-right.d-none.d-sm-block(type="submit", name="modify") 修正する
          button.btn.btn-danger.btn-sm.float-right.d-block.d-sm-none.mt-4.ml-2(type="submit", name="delete") 削除する
          button.btn.btn-info.btn-sm.float-right.d-block.d-sm-none.mt-4(type="submit", name="modify") 修正する




mixin result(question)
  .card.m-0.m-sm-4(name=question.id)
    .card-header.clearfix(style="background-color: ivory;")
      .row
        .col-8.col-sm-10.pr-0=question.title
        .col-4.col-sm-2.pl-0
          a.float-right(href=encodeURI("http://twitter.com/share?url=https://enquetia.net/" + question.id + "/result&text=気になるアンケート結果を見つけました！「" + question.title + "」&hashtags=Enquetia,アンケティア,アンケート結果"), target="_blank")
            img(src="/img/twitter_icon.png", width="25", height="25", alt="twitterに投稿", title="twitterに投稿")
          if profile
            if question.is_favorite
              a.float-right.mr-1.favoriteButton(onclick="removeFromFavorite(" + question.id + ")", style="cursor: pointer;")
                img(src="/img/favorite.png", width="30", height="30", alt="お気に入りから削除", title="お気に入りから削除")
              a.float-right.mr-1.favoriteButton(onclick="addToFavorite(" + question.id + ")", style="cursor: pointer; display: none;")
                img(src="/img/unfavorite.png", width="30", height="30", alt="お気に入りに追加", title="お気に入りに追加")
            else
              a.float-right.mr-1.favoriteButton(onclick="removeFromFavorite(" + question.id + ")", style="cursor: pointer; display: none;")
                img(src="/img/favorite.png", width="30", height="30", alt="お気に入りから削除", title="お気に入りから削除")
              a.float-right.mr-1.favoriteButton(onclick="addToFavorite(" + question.id + ")", style="cursor: pointer;")
                img(src="/img/unfavorite.png", width="30", height="30", alt="お気に入りに追加", title="お気に入りに追加")
    .card-body.p-4
      unless question.description === undefined || question.description === ''
        p.card-text #{question.description}
      unless question.hashtags === undefined || question.hashtags === ''
        p.card-text
          a #test
      .chart-container
        canvas.mb-4.result(data-json=question)

      - var time_left = ""
      if question.is_expired
        - time_left += "受付は終了しました"
      else if question.is_voted
        - time_left += "投票済み"
      else if question.period_hours === -1
        - time_left += "無期限"
      else
        - time_left += "残り"
        if question.left_hours > 0
          if parseInt(question.left_hours/24) > 0
            - time_left += String(parseInt(question.left_hours/24, 10)) + "日"
          - time_left += String(parseInt(question.left_hours, 10)%24) + "時間"

      - var publish_status = ""
      if !question.is_expired
        - publish_status += ""
        if question.publish_status === 1
          - publish_status += "トップページ公開"
        else if question.publish_status === 2
          - publish_status += "トップページ非公開"

      p.card-text.mb-0.clearfix
        small.text-muted.mr-1 投票数：#{question.count}票
        small.text-muted.mr-1 #{publish_status}
        if question.is_expired || question.is_voted
          small.mr-2(style="color:red;") #{time_left}
        else
          small.text-muted.mr-2 #{time_left}
          br
          a(href="javascript:void(0)", onclick="showVote(this)")
            small 投票画面へ
          a(href="/" + question.id)
            small アンケートのページに移動



mixin editableResult(question)
  .card.m-0.m-sm-4(name=question.id)
    .card-header.clearfix(style="background-color: ivory;")
      .row
        .col-8.col-sm-10.pr-0=question.title
        .col-4.col-sm-2.pl-0
          a.float-right(href=encodeURI("http://twitter.com/share?url=https://enquetia.net/" + question.id + "/result&text=気になるアンケート結果を見つけました！「" + question.title + "」&hashtags=Enquetia,アンケティア,アンケート結果"), target="_blank")
            img(src="/img/twitter_icon.png", width="25", height="25", alt="twitterに投稿", title="twitterに投稿")
          if profile
            if question.is_favorite
              a.float-right.mr-1.favoriteButton(onclick="removeFromFavorite(" + question.id + ")", style="cursor: pointer;")
                img(src="/img/favorite.png", width="30", height="30", alt="お気に入りから削除", title="お気に入りから削除")
              a.float-right.mr-1.favoriteButton(onclick="addToFavorite(" + question.id + ")", style="cursor: pointer; display: none;")
                img(src="/img/unfavorite.png", width="30", height="30", alt="お気に入りに追加", title="お気に入りに追加")
            else
              a.float-right.mr-1.favoriteButton(onclick="removeFromFavorite(" + question.id + ")", style="cursor: pointer; display: none;")
                img(src="/img/favorite.png", width="30", height="30", alt="お気に入りから削除", title="お気に入りから削除")
              a.float-right.mr-1.favoriteButton(onclick="addToFavorite(" + question.id + ")", style="cursor: pointer;")
                img(src="/img/unfavorite.png", width="30", height="30", alt="お気に入りに追加", title="お気に入りに追加")
    .card-body.p-4
      unless question.description === undefined || question.description === ''
        p.card-text #{question.description}
      unless question.hashtags === undefined || question.hashtags === ''
        p.card-text
          a #test
      canvas.mb-4.result(data-json=question)

      - var time_left = ""
      if question.is_expired
        - time_left += "受付は終了しました"
      else if question.is_voted
        - time_left += "投票済み"
      else if question.period_hours === -1
        - time_left += "無期限"
      else
        - time_left += "残り"
        if question.left_hours > 0
          if parseInt(question.left_hours/24) > 0
            - time_left += String(parseInt(question.left_hours/24, 10)) + "日"
          - time_left += String(parseInt(question.left_hours, 10)%24) + "時間"

      - var publish_status = ""
      if !question.is_expired
        - publish_status += ""
        if question.publish_status === 1
          - publish_status += "トップページ公開"
        else if question.publish_status === 2
          - publish_status += "トップページ非公開"

      p.card-text.mb-0.clearfix
        small.text-muted.mr-1 投票数：#{question.count}票
        small.text-muted.mr-1 #{publish_status}
        if question.is_expired || question.is_voted
          small.mr-2(style="color:red;") #{time_left}
        else
          small.text-muted.mr-2 #{time_left}
          a(href="javascript: void(0)", onclick="showVote(this)")
            small 投票画面へ
        br
        a(href="/" + question.id)
          small アンケートのページに移動

      form.needs-validation(method="POST", action="/mypage/" + question.id, novalidate)
        button.btn.btn-danger.btn-sm.float-right.d-none.d-sm-block.ml-2(type="submit", name="delete") 削除する
        button.btn.btn-info.btn-sm.float-right.d-none.d-sm-block(type="submit", name="modify") 修正する
        button.btn.btn-danger.btn-sm.float-right.d-block.d-sm-none.mt-4.ml-2(type="submit", name="delete") 削除する
        button.btn.btn-info.btn-sm.float-right.d-block.d-sm-none.mt-4(type="submit", name="modify") 修正する

